name: 构建

on:
  workflow_dispatch:
    inputs:
      clean_cache:
        description: 'Clear caches'
        required: false
        type: boolean
  push:
    branches:
      - ts_world

jobs:
  build:
    runs-on: ubuntu-latest
    name: 构建项目
    steps:
      - name: 检出项目文件
        uses: actions/checkout@v3
        
      - name: 获取当前时间
        id: pkw
        run: |
          echo "::set-output name=today::$(date +'%Y%m%d')"
          echo "::set-output name=git_branch::$(git name-rev --name-only HEAD)"
        
      - name: 安装依赖
        run: |
          sudo apt-get install -y devscripts debhelper
          
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        
      - name: 查看可用平台
        run: echo ${{ steps.buildx.outputs.platforms }}
        
      - name: 配置world
        run: |
          cd ./attic/world/
          sed -i '/roots.push_back/d' ./mkworld.cpp
          sed -i '/roots.back()/d' ./mkworld.cpp
          sed -i '85i roots.push_back(World::Root());' ./mkworld.cpp
          sed -i '86i roots.back().identity = Identity(\"68beb14d5d:0:e6f79760ff272d941797c51518d0c5819047f06d6bf4006397ca4d1bb452147dddbff8e62afab3e03adaffd3e02aca64bfd1f9a7e331e25040b995df112f5c37\");' ./mkworld.cpp
          sed -i '87i roots.back().stableEndpoints.push_back(InetAddress(\"121.40.200.168\/9994\"));' ./mkworld.cpp
          sed -i '88i roots.back().stableEndpoints.push_back(InetAddress(\"2001:470:23:d1::2\/9994\"));' ./mkworld.cpp
          c++ -std=c++11 -I../.. -I.. -I../../ext -g -o mkworld ../../node/C25519.cpp ../../node/Salsa20.cpp ../../node/SHA512.cpp ../../node/Identity.cpp ../../node/Utils.cpp ../../node/InetAddress.cpp ../../osdep/OSUtils.cpp mkworld.cpp -lm
      
      - name: 生成 world
        run: |
          ./attic/world/mkworld > attic/world/world.c
          sed -i '25,26d' node/Topology.cpp
          sed -i '23r attic/world/world.c' node/Topology.cpp
          cp node/Topology.cpp attic/world/world.cpp
          
      - name: 编译
        run: |
          make official 
          
      - name: 打包
        run: |
          make debian
          ls -la
          
      - name: 上传成果到 github actions
        uses: actions/upload-artifact@v3
        with:
          name: world
          path: |
            attic/world/world.*
            *.deb
            *.rpm
            build-*
            ZeroTierOneInstaller-*
          if-no-files-found: error
          retention-days: 1
        
#       - name: 登录阿里云容器
#         uses: docker/login-action@v1
#         with:
#           registry: registry.cn-hangzhou.aliyuncs.com
#           username: ${{ secrets.ALIYUN_USERNAME }}
#           password: ${{ secrets.ALIYUN_PASSWORD }}
          
      - name: 登录 DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: 准备构建镜像
        run: |
          sed -i '#registry.zerotier.com/zerotier##g' ./ext/central-controller-docker/Dockerfile 
          cat ./ext/central-controller-docker/Dockerfile
  
      - name: 准备辅助镜像 controller-builder
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./ext/central-controller-docker/Dockerfile.builder
          build-args: git_branch=${{ steps.pkw.outputs.git_branch }} 
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ secrets.DOCKER_USERNAME }}/controller-builder:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
  
      - name: 准备辅助镜像 controller-run
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./ext/central-controller-docker/Dockerfile.run_base
          build-args: git_branch=${{ steps.pkw.outputs.git_branch }} 
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ secrets.DOCKER_USERNAME }}/controller-run:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
        
      - name: 构建镜像并推送
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./ext/central-controller-docker/Dockerfile
          build-args: git_branch=${{ steps.pkw.outputs.git_branch }} 
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/ztcentral-controller:latest
            ${{ secrets.DOCKER_USERNAME }}/ztcentral-controller:${{ steps.pkw.outputs.today }} 
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
      - name: 删除旧的工作流
        uses: Mattraks/delete-workflow-runs@v2
        with:
          retain_days: 1
          keep_minimum_runs: 3
